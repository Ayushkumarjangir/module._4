// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

import "@openzeppelin/contracts/token/ERC20/ERC20.sol";
import "@openzeppelin/contracts/access/Ownable.sol";

contract DegenGamingToken is ERC20, Ownable {
    constructor(string memory _name, string memory _symbol, uint256 _initialSupply) ERC20(_name, _symbol) {
        _mint(msg.sender, _initialSupply * 10 ** decimals());
    }

    function mint(address _account, uint256 _amount) public onlyOwner {
        _mint(_account, _amount);
    }

    function redeem(uint256 _amount, string memory _prize) public {
        require(balanceOf(msg.sender) >= _amount, "in our account Insufficient balance");
        
        _burn(msg.sender, _amount);
       
        emit PrizeRedeemed(msg.sender, _prize, _amount);
    }

    function burn(uint256 _amount) public {
        _burn(msg.sender, _amount);
    }

    event PrizeRedeemed(address indexed player, string prize, uint256 cost);
}
